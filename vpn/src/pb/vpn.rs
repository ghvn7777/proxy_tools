// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DomainAddr {
    #[prost(string, tag = "1")]
    pub domain: ::prost::alloc::string::String,
    #[prost(uint32, tag = "2")]
    pub port: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DestinationAddr {
    #[prost(oneof = "destination_addr::Addr", tags = "1, 2, 3")]
    pub addr: ::core::option::Option<destination_addr::Addr>,
}
/// Nested message and enum types in `DestinationAddr`.
pub mod destination_addr {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Addr {
        #[prost(string, tag = "1")]
        V4(::prost::alloc::string::String),
        #[prost(string, tag = "2")]
        V6(::prost::alloc::string::String),
        #[prost(message, tag = "3")]
        Domain(super::DomainAddr),
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TcpConnect {
    #[prost(message, optional, tag = "1")]
    pub destination: ::core::option::Option<DestinationAddr>,
    #[prost(uint32, tag = "2")]
    pub id: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Data {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(bytes = "vec", tag = "2")]
    pub data: ::prost::alloc::vec::Vec<u8>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CommandRequest {
    #[prost(oneof = "command_request::Command", tags = "2, 3, 4")]
    pub command: ::core::option::Option<command_request::Command>,
}
/// Nested message and enum types in `CommandRequest`.
pub mod command_request {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Command {
        #[prost(message, tag = "2")]
        TcpConnect(super::TcpConnect),
        #[prost(message, tag = "3")]
        Data(super::Data),
        #[prost(uint32, tag = "4")]
        ClosePort(u32),
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CommandResponse {
    #[prost(oneof = "command_response::Response", tags = "1, 2, 3, 4")]
    pub response: ::core::option::Option<command_response::Response>,
}
/// Nested message and enum types in `CommandResponse`.
pub mod command_response {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Response {
        #[prost(message, tag = "1")]
        Data(super::Data),
        #[prost(uint32, tag = "2")]
        ClosePort(u32),
        #[prost(uint32, tag = "3")]
        TcpConnectSuccess(u32),
        #[prost(uint32, tag = "4")]
        TcpConnectFailed(u32),
    }
}
